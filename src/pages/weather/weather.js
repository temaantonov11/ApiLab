
const cityInput = document.getElementById('cityInput');
const searchBtn = document.getElementById('searchBtn');
const weatherResult = document.getElementById('weatherResult');

const API_KEY = '8b6e40f2bc4142c4ba8172326252110';
const API_URL = `https://api.weatherapi.com/v1/current.json?key=${API_KEY}&aqi=no`;

searchBtn.addEventListener('click', searchWeather);

// –¢–∞–∫–∂–µ –ø–æ–∏—Å–∫ –ø–æ Enter
cityInput.addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
        searchWeather();
    }
});

async function searchWeather() {
    const cityName = cityInput.value.trim();
    
    if (!cityName) {
        showError('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞');
        return;
    }
    
    weatherResult.innerHTML = '<div class="loading">üîç –ò—â–µ–º –ø–æ–≥–æ–¥—É –¥–ª—è ' + cityName + '...</div>';
    
    try {
        await fetchWeather(cityName);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        showError(error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.');
    }
}

async function fetchWeather(cityName) {
    const url = `${API_URL}&q=${encodeURIComponent(cityName)}&lang=ru`;
    
    const response = await fetch(url);
    
    if (!response.ok) {
        if (response.status === 400) {
            throw new Error('–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è.');
        } else if (response.status === 401) {
            throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.');
        } else if (response.status === 403) {
            throw new Error('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á.');
        } else {
            throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
    
    const data = await response.json();
    displayWeather(data);
}

function displayWeather(data) {
    const location = data.location;
    const current = data.current;
    
    const temperature = Math.round(current.temp_c);
    
    const weatherIcon = current.condition.icon;
    const weatherDescription = current.condition.text;
    
    const observationTime = new Date(current.last_updated).toLocaleString('ru-RU');
    
    const html = `
        <div class="weather-card">
            <div class="weather-main">
                <h2>${location.name}, ${location.country}</h2>
                <div>
                    <div>–û–±–Ω–æ–≤–ª–µ–Ω–æ: ${observationTime}</div>
                    <div>–†–µ–≥–∏–æ–Ω: ${location.region || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
                </div>

                <div class="temperature-section">
                    <div class="temperature">${temperature}¬∞C</div>
                    <div class="feels-like">
                        –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: ${Math.round(current.feelslike_c)}¬∞C
                    </div>
                    <div class="weather-description">
                        <img src="https:${weatherIcon}" alt="${weatherDescription}" class="weather-icon-img">
                        <span>${weatherDescription}</span>
                    </div>
                </div>
            </div>
            
            <div class="weather-details">
                <div class="detail-grid">
                    <div class="detail-item">
                        <span class="value">–í–µ—Ç–µ—Ä: ${getWindDirection(current.wind_degree)}, ${current.wind_kph} –∫–º/—á</span>
                    </div>
                    <div class="detail-item">
                        <span class="value">–í–ª–∞–∂–Ω–æ—Å—Ç—å: ${current.humidity}%</span>
                    </div>
                    <div class="detail-item">
                        <span class="value">–î–∞–≤–ª–µ–Ω–∏–µ: ${current.pressure_mb} hPa</span>
                    </div>
                    <div class="detail-item">
                        <span class="value">–í–∏–¥–∏–º–æ—Å—Ç—å: ${current.vis_km} –∫–º</span>
                    </div>
                    <div class="detail-item">
                        <span class="value">–û–±–ª–∞—á–Ω–æ—Å—Ç—å: ${current.cloud}%</span>
                    </div>
                    <div class="detail-item">
                        <span class="value">–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: ${location.tz_id}</span>
                    </div>
                    <div class="detail-item">
                        <span class="value">–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${location.lat.toFixed(2)}, ${location.lon.toFixed(2)}</span>
                    </div>
                </div>
            </div>
            
            <div class="api-info">
                <p>–î–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã WeatherAPI</p>
            </div>
        </div>
    `;
    
    weatherResult.innerHTML = html;
}

function getWindDirection(degrees) {
    if (!degrees) return '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    
    const directions = ['–°–µ–≤–µ—Ä–Ω—ã–π', '–°–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π', '–í–æ—Å—Ç–æ—á–Ω—ã–π', '–Æ–≥–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π', '–Æ–∂–Ω—ã–π', '–Æ–≥–æ-–∑–∞–ø–∞–¥–Ω—ã–π', '–ó–∞–ø–∞–¥–Ω—ã–π', '–°–µ–≤–µ—Ä–æ-–∑–∞–ø–∞–¥–Ω—ã–π'];
    const index = Math.round(degrees / 45) % 8;
    return directions[index] + ` (${degrees}¬∞)`;
}

function showError(message) {
    weatherResult.innerHTML = `<div class="error-message">${message}</div>`;
}
